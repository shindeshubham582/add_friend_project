{"version":3,"sources":["components/pagination.js","components/friendList.js","App.js","reportWebVitals.js","index.js"],"names":["pageNo","Pagination","items","parentCallback","currentPage","pageNumbers","i","Math","ceil","length","push","handlePageClick","e","Number","target","id","renderPageNumbers","map","number","className","document","getElementById","onClick","FriendList","indexOfLastFriend","indexOfFirstFriend","currentItem","useState","inputData","state","setState","setCurrentItems","useEffect","getUpdatedItems","slice","RenderInputComp","type","value","onChange","placeholder","onKeyPress","addItem","maxLength","RenderItemComp","filter","item","index","friendName","toLowerCase","includes","elem","icon","faStar","fav","addRemoveFavourite","faTrashAlt","deleteItem","charCode","values","key","elemId","updatedItems","itemArr","splice","unshift","spliced","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e3c085d.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css'\n\nlet pageNo = 1;\nconst Pagination = ({items, parentCallback, currentPage}) => {\n\n    const itemsPerPage = 4;\n    pageNo = currentPage;\n\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const handlePageClick = (e) => {\n        pageNo = Number(e.target.id);\n        parentCallback(pageNo);\n    }\n\n    // Page Number Component\n    const renderPageNumbers = pageNumbers.map(number => {\n        return (\n          <div id={number}\n            className={\"pages-div \" + ((number === pageNo && document.getElementById(number)) ? 'page-div-clicked':'')}\n            key={number}\n            onClick={handlePageClick}\n          >\n            {number}\n          </div>\n        );\n      });\n\n    return (\n        <div>\n            <div id=\"page-numbers\">\n            {renderPageNumbers}\n            </div>\n        </div>\n    );\n}\n\nexport default Pagination;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../App.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport Pagination from './pagination';\n\nconst FriendList = () => {\n\n    let indexOfLastFriend, indexOfFirstFriend, currentItem;\n    const [state, setState] = useState({\n        inputData: '',\n        items: [],\n        currentPage: 1    \n    });\n    const [currentItems, setCurrentItems] = useState([]);\n    const itemsPerPage = 4;\n\n    const clearAllList = () => {\n        setState({\n            inputData: '',\n            items: [],\n            currentPage: 1    \n        })\n    }\n\n    useEffect(() => {\n        currentItem = getUpdatedItems(state.items);\n        setCurrentItems(currentItem);\n    }, [state, state.items, state.currentPage]);\n\n    // To Update the CurrentItems array\n    const getUpdatedItems = (items) => {\n        // Logic for Updating Friends Lists\n        indexOfLastFriend = state.currentPage * itemsPerPage;\n        indexOfFirstFriend = indexOfLastFriend - itemsPerPage;\n        let currentItem = items.slice(indexOfFirstFriend, indexOfLastFriend);\n        return currentItem;\n    }\n\n    // Input & Search Component\n    const RenderInputComp = <input type=\"text\" value={state.inputData}\n                            onChange={(e) => setState({...state, inputData: e.target.value, currentPage: state.currentPage})}\n                            placeholder=\"Enter your friend's name\"\n                            onKeyPress={(e) => addItem(e)}\n                            maxLength=\"50\" />;\n\n    // Friends List Component\n    const RenderItemComp = state.items.filter((item, index) => {\n                            if (state.inputData === \"\") {\n                                return ((index >= (state.currentPage * itemsPerPage) - itemsPerPage && index < state.currentPage * itemsPerPage));\n                            } else if (item.friendName.toLowerCase().includes(state.inputData.toLowerCase())) {\n                                return item;\n                            }\n                            }).map((elem, index) => {\n                                return (\n                                    <div className=\"eachItem\" key={index}>\n                                        <h3>{elem.friendName}</h3>\n                                        <div className=\"todo-btn\">\n                                            <FontAwesomeIcon icon={faStar} id={'star' + index} className= {'fa-star' + ' ' + (elem.fav === 0 ? 'star-empty' : 'star-filled')} onClick={() => addRemoveFavourite(index, elem.id)} />\n                                            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-trash-alt\" onClick={() => deleteItem(index, elem.id)} />\n                                        </div>\n                                        <div className=\"friend-text\"><br />{elem.fav === 0 ? 'is your friend' : 'is your close friend'}</div>\n                                    </div>\n                                )\n                            })\n\n    // Add a friend to list\n    const addItem = (e) => {\n        if (e.charCode === 13 && state.inputData !== \"\") {\n            const values = { \"id\": state.items.length, \"friendName\": state.inputData, \"fav\": 0 };\n            setState({...state, items: [...state.items, values], inputData: ''});            \n        }\n    }\n\n    // Delete a Friend from list\n    const deleteItem = (key, elemId) => {\n        const updatedItems = state.items.filter((elem, index) => {\n            return elem.id !== elemId;\n        });\n        let currentItem = getUpdatedItems(updatedItems);\n        setState({...state, items: updatedItems});\n        if(currentItem.length === 0 && state.currentPage !== 1) {\n            const currentPage = state.currentPage - 1;\n            setState({...state, items: updatedItems, currentPage: currentPage});\n        }\n    }\n\n    // Set current Page from Pagination Component\n    const setCurrentPages = (pageNo) => {\n        setState({...state, currentPage: pageNo});\n    }\n\n    // Add a Friend to Favourite\n    const addRemoveFavourite = (key, elemId) => {\n        let itemArr = state.items.slice();\n        for (let i = 0; i < itemArr.length; i++) {\n            let item = itemArr[i];\n            if (item.id === elemId) {\n                if (item.fav === 0) {\n                    item.fav = 1;\n                    itemArr.splice(i, 1);\n                    itemArr.unshift(item);\n                    break;\n                } else {\n                    item.fav = 0;\n                    let spliced = itemArr.splice(i, 1);\n                    itemArr.push(spliced[0]);\n                    break;\n                }\n            }\n        }\n        setState({...state, items: itemArr});\n    }\n\n    return (\n        <>\n            <div className=\"main-div\">\n                <div className=\"child-div\">\n                    <div className=\"header-div\">\n                        <h3>Friends List</h3>\n                    </div>\n                    <div className=\"addItems\">\n                        {RenderInputComp}\n                    </div>\n                    <div className=\"showItems\">\n                        {RenderItemComp}\n                    </div>\n                    <Pagination items={state.items} currentPage={state.currentPage} parentCallback={setCurrentPages} />\n                    {\n                          state.items.length > 0 && <div className = 'clearAll'><button className = 'clearAll' onClick = {clearAllList}>Clear All</button> </div>\n                    }\n                </div>\n                <div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default FriendList;","import './App.css';\nimport FriendList from './components/friendList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <FriendList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}